version: '3.9'

services:
  keycloak-postgres:
    image: postgres
    container_name: keycloak-postgres
    restart: on-failure
    networks:
      - my_bridge_network
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    healthcheck:
      test: pg_isready -d postgres
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          memory: 256M
  
  keycloak:
    image: quay.io/keycloak/keycloak:20.0.2
    container_name: keycloak
    networks:
      - my_bridge_network
    command:
      - start --hostname-strict-https false --hostname-strict false --proxy edge --http-enabled true --import-realm --spi-user-profile-legacy-user-profile-read-only-attributes *_RES_ACCESS_MODE
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      DB_VENDOR: POSTGRES
      DB_ADDR: db
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
    volumes:
      - type: bind
        source: ./realm-export.json
        target: /opt/keycloak/data/import/realm-export.json
        read_only: true
    ports:
      - "8080:8080"
    depends_on:
      keycloak-postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://keycloak:8080/realms/master" ]
      start_period: 10s
      interval: 30s
      retries: 3
      timeout: 5s
      
  web-api:
    build: .
    container_name: web-api
    networks:
      - my_bridge_network
    ports:
      - "6000:6000"
    depends_on:
      keycloak:
        condition: service_healthy
      
networks:
  my_bridge_network:
    driver: bridge